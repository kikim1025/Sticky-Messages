{"version":3,"sources":["components/Home/Message/MessageModal.js","components/Home/Message/Message.js","components/Home/HomePage.js","components/Login/LoginForm.js","components/Login/LoginPage.js","App.js","index.js"],"names":["MessageModal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getInput","event","setState","defineProperty","target","name","value","state","modal","dropdown","dropdownVal","dropdownValId","title","body","alert","alertModal","toggleModal","bind","assertThisInitialized","toggleDropdown","changeDropdownVal","sendMessage","id","_this2","length","config","headers","x-access-token","jwt","$","post","receiver","then","res","data","status","getData","logout","_this3","react_default","a","createElement","reactstrap_es","onClick","isOpen","toggle","color","caret","userList","map","u","i","Fragment","key","username","_id","divider","className","onChange","cols","rows","maxLength","placeholder","React","Component","Message","sender","HomePage","messageList","get","componentDidMount","Home_Message_MessageModal","m","Home_Message_Message","LoginForm","getLoginInput","type","handleLoginForm","LoginPage","password","preventDefault","login","token","concat","message","components_Login_LoginForm","App","loggedIn","components_Home_HomePage","components_Login_LoginPage","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2a25a302.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport $ from 'axios';\r\nimport './MessageModal.css'\r\n\r\nclass MessageModal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            dropdown: false,\r\n            dropdownVal: 'Choose Receiver',\r\n            dropdownValId: '',\r\n            title: '',\r\n            body: '',\r\n            alert: '',\r\n            alertModal: ''\r\n        }\r\n        // need to update this here to be modular when have time later, since they are just repeats\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleDropdown = this.toggleDropdown.bind(this);\r\n        this.changeDropdownVal = this.changeDropdownVal.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({ dropdownVal: 'Choose Receiver', dropdownValId: '', title: '', body: '', alert: '', alertModal: '', modal: !this.state.modal });\r\n    }\r\n\r\n    toggleDropdown() {\r\n        this.setState({ dropdown: !this.state.dropdown });\r\n    }\r\n\r\n    changeDropdownVal(event) {\r\n        this.setState({ dropdownVal: event.target.name, dropdownValId: event.target.id });\r\n    }\r\n\r\n    // need to figure out why this one does not need binding\r\n    getInput = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    sendMessage() {\r\n        if (this.state.title.length > 0 && this.state.body.length > 0 && this.state.dropdownValId.length > 0) {\r\n            var config = {\r\n                headers: {'x-access-token': this.props.jwt}\r\n            };\r\n            $.post('/api/message', {\r\n                title: this.state.title,\r\n                body: this.state.body,\r\n                receiver: this.state.dropdownValId\r\n            }, config)\r\n            .then((res) => {\r\n                this.toggleModal();\r\n                if (res.data.status === 200) {\r\n                    this.props.getData();\r\n                } else if (res.data.status === 401) {\r\n                    this.props.logout();\r\n                } else {\r\n                    this.setState({ alert: 'Something with request or server database went wrong.' });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ alertModal: 'Title and body of message cannot be empty, and the receiver must be chosen in the dropdown menu.' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='button-container--post-message'> \r\n                <Button id='button--modal' onClick={this.toggleModal}>Post a Sticky Message</Button>\r\n                <div>{this.state.alert}</div>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>A New Sticky Message</ModalHeader>\r\n                    <div id='alert--modal'>{this.state.alertModal}</div>\r\n                    <ModalBody>\r\n                        <form>\r\n                            <Dropdown isOpen={this.state.dropdown} toggle={this.toggleDropdown}>\r\n                                <DropdownToggle color='info' caret>\r\n                                    {this.state.dropdownVal}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {this.props.userList.map((u, i) => (\r\n                                        <React.Fragment key={i}>\r\n                                            <DropdownItem name={u.username} id={u._id} onClick={this.changeDropdownVal}>{u.username}</DropdownItem>\r\n                                            <DropdownItem divider />\r\n                                        </React.Fragment>\r\n                                    ))}\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            <div id='input-modal'>\r\n                                <textarea className='input-modal--input' name='title' onChange={this.getInput} cols='48' rows='1' maxLength='15' placeholder='Write a title here'></textarea>\r\n                                <hr />\r\n                                <textarea className='input-modal--input' name='body' onChange={this.getInput} cols='48' rows='10' maxLength='300' placeholder='Write a message here'></textarea>\r\n                            </div>\r\n                        </form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color='primary' onClick={this.sendMessage}>Submit Message</Button>\r\n                        <Button color='danger' onClick={this.toggleModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageModal;","import React from 'react';\r\nimport './Message.css'\r\n\r\nconst Message = (props) => (\r\n    <div className='message'> \r\n        <div className='message__title'>Title: {props.title}</div>\r\n        <div className='message__sender'>From: {props.sender.username}</div>\r\n        <div className='message__receiver'>To: {props.receiver.username}</div>\r\n        <div className='message__body'>{props.body}</div>\r\n    </div>\r\n)\r\n\r\nexport default Message;","import React from 'react';\r\nimport $ from 'axios';\r\nimport MessageModal from './Message/MessageModal';\r\nimport Message from './Message/Message';\r\nimport './HomePage.css';\r\n\r\nclass HomePage extends React.Component {\r\n  state = {\r\n    messageList: [],\r\n    userList: [],\r\n    alert: '',\r\n  }\r\n\r\n  getData = () => {\r\n    $.get('/api/user')\r\n    .then((res) => {\r\n      if (res.data.status === 200) {\r\n        this.setState({ userList: res.data.data });\r\n      } else {\r\n        this.setState({ alert: 'Something with request or server database went wrong.' });\r\n      } \r\n    });\r\n    $.get(`/api/message`)\r\n    .then((res) => {\r\n      if (res.data.status === 200) {\r\n        this.setState({ messageList: res.data.data });\r\n      } else {\r\n        this.setState({ alert: 'Something with request or server database went wrong.' });\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getData(); \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='home-page__container'>\r\n        <MessageModal jwt={this.props.jwt} userList={this.state.userList} getData={this.getData} logout={this.props.logout} />\r\n        { this.state.messageList.length === 0\r\n          ? <div id='alert-temp'>Retrieving messages...</div> // Message database will never be empty in practice because I will post one right after deployment.\r\n          : this.state.messageList.map((m, i) => (\r\n              <Message\r\n                title={m.title}\r\n                body={m.body}\r\n                sender={m.sender}\r\n                receiver={m.receiver} \r\n                key = {i}\r\n              />\r\n            ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './LoginForm.css';\r\n\r\nconst LoginForm = (props) => (\r\n    <form>\r\n        <div>Username:&nbsp;<input name='username' onChange={props.getLoginInput} type='text' maxLength='15'></input></div>\r\n        &nbsp;\r\n        <div>Password: &nbsp;<input name='password' onChange={props.getLoginInput} type='password' maxLength='15'></input></div>\r\n        <br /><br />\r\n        <button className='button--loginform' name='login' onClick={props.handleLoginForm}>Login</button>\r\n        <button className='button--loginform' name='create' onClick={props.handleLoginForm}>Create Account</button>\r\n        <hr />\r\n        <div >\r\n            New Users: Simply enter a new username and a password to create a new account!\r\n        </div>\r\n    </form>\r\n)\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport $ from 'axios';\r\nimport LoginForm from './LoginForm';\r\nimport './LoginPage.css';\r\n\r\nclass LoginPage extends React.Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        alert: this.props.alert\r\n    }\r\n\r\n    getLoginInput = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    handleLoginForm = (event) => {\r\n        event.preventDefault();\r\n        if (!this.state.username.length || !this.state.password.length) {\r\n            this.setState({ alert: 'Username and password must be longer than 0 and shorter than 15.'});\r\n        } else {\r\n            if (event.target.name === 'login') {\r\n                $.post('/api/user/login', { username: this.state.username, password: this.state.password })\r\n                .then((res) => {\r\n                    if(res.data.status === 200) {\r\n                        this.props.login(res.data.data.token);\r\n                    } else if (res.data.status === 401) {\r\n                        this.setState({ alert: 'Username or password is wrong.'});\r\n                    } else {\r\n                        this.setState({ alert: 'Something with request or server database went wrong.'});\r\n                    }\r\n                });\r\n            } else if (event.target.name === 'create') {\r\n                $.post('/api/user', { username: this.state.username, password: this.state.password })\r\n                .then((res) => {\r\n                    if(res.data.status === 200) {\r\n                        this.setState({ alert: `Welcome ${res.data.data}! Please now login with the new username and password.` });\r\n                    } else if (res.data.status === 403 && res.data.message.name === 'MongoError') {\r\n                        this.setState({ alert: 'Username already exists. Please choose different username.'});\r\n                    } else {\r\n                        this.setState({ alert: 'Something with request or server database went wrong.'});\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className='alert'>{this.state.alert}</div>\r\n                <LoginForm getLoginInput={this.getLoginInput} handleLoginForm={this.handleLoginForm} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\nimport HomePage from './components/Home/HomePage';\nimport LoginPage from './components/Login/LoginPage';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    jwt: '',\n    loggedIn: false,\n    alert: ''\n  }\n\n  login = (token) => {\n    this.setState({  jwt: token, loggedIn: true })\n  }\n\n  logout = () => {\n    this.setState({ jwt: '', alert: 'Token expired. Please log in again.', loggedIn: false });\n  }\n\n  render() {\n    return (\n      <div id='main'>\n        {this.state.loggedIn\n          ? <div id='home-page'>\n              <HomePage jwt={this.state.jwt} logout={this.logout} />\n            </div>\n          : <div id='login-page'>\n              <LoginPage login={this.login} alert={this.state.alert} />\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}